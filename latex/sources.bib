@misc{lamkhede2021recommendations,
      title={Recommendations and Results Organization in Netflix Search}, 
      author={Sudarshan Lamkhede and Christoph Kofler},
      year={2021},
      eprint={2105.14134},
      archivePrefix={arXiv},
      primaryClass={cs.IR}
}

@misc{esmaeilzadeh2022abuse,
      title={Abuse and Fraud Detection in Streaming Services Using Heuristic-Aware Machine Learning}, 
      author={Soheil Esmaeilzadeh and Negin Salajegheh and Amir Ziai and Jeff Boote},
      year={2022},
      eprint={2203.02124},
      archivePrefix={arXiv},
      primaryClass={cs.LG}
}
@inproceedings{47751,
title	= {BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding},
author	= {Jacob Devlin and Ming-Wei Chang and Kenton Lee and Kristina N. Toutanova},
year	= {2018},
URL	= {https://arxiv.org/abs/1810.04805}
}
@article{Steck_Baltrunas_Elahi_Liang_Raimond_Basilico_2021, title={Deep Learning for Recommender Systems: A Netflix Case Study}, volume={42}, url={https://ojs.aaai.org/aimagazine/index.php/aimagazine/article/view/18140}, DOI={10.1609/aimag.v42i3.18140}, abstractNote={&lt;p&gt;Deep learning has profoundly impacted many areas of machine learning. However, it took a while for its impact to be felt in the field of recommender systems. In this article, we outline some of the challenges encountered and lessons learned in using deep learning for recommender systems at Netflix. We first provide an overview of the various recommendation tasks on the Netflix service. We found that different model architectures excel at different tasks. Even though many deep-learning models can be understood as extensions of existing (simple) recommendation algorithms, we initially did not observe significant improvements in performance over well-tuned non-deep-learning approaches. Only when we added numerous features of heterogeneous types to the input data, deep-learning models did start to shine in our setting. We also observed that deep-learning methods can exacerbate the problem of offline–online metric (mis-)alignment. After addressing these challenges, deep learning has ultimately resulted in large improvements to our recommendations as measured by both offline and online metrics. On the practical side, integrating deep-learning toolboxes in our system has made it faster and easier to implement and experiment with both deep-learning and non-deep-learning approaches for various recommendation tasks. We conclude this article by summarizing our take-aways that may generalize to other applications beyond Netflix.&lt;/p&gt;}, number={3}, journal={AI Magazine}, author={Steck, Harald and Baltrunas, Linas and Elahi, Ehtsham and Liang, Dawen and Raimond, Yves and Basilico, Justin}, year={2021}, month={Nov.}, pages={7-18}}

@inproceedings{10.1145/2959100.2959174,
author = {Wu, Chao-Yuan and Alvino, Christopher V. and Smola, Alexander J. and Basilico, Justin},
title = {Using Navigation to Improve Recommendations in Real-Time},
year = {2016},
isbn = {9781450340359},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2959100.2959174},
doi = {10.1145/2959100.2959174},
abstract = {Implicit feedback is a key source of information for many recommendation and personalization approaches. However, using it typically requires multiple episodes of interaction and roundtrips to a recommendation engine. This adds latency and neglects the opportunity of immediate personalization for a user while the user is navigating recommendations.We propose a novel strategy to address the above problem in a principled manner. The key insight is that as we observe a user's interactions, it reveals much more information about her desires. We exploit this by inferring the within-session user intent on-the-fly based on navigation interactions, since they offer valuable clues into a user's current state of mind. Using navigation patterns and adapting recommendations in real-time creates an opportunity to provide more accurate recommendations. By prefetching a larger amount of content, this can be carried out entirely in the client (such as a browser) without added latency. We define a new Bayesian model with an efficient inference algorithm. We demonstrate significant improvements with this novel approach on a real-world, large-scale dataset from Netflix on the problem of adapting the recommendations on a user's homepage.},
booktitle = {Proceedings of the 10th ACM Conference on Recommender Systems},
pages = {341–348},
numpages = {8},
keywords = {recommender systems, user navigation modeling, probabilistic graphical models, user modeling, online inference, real-time recommendations, latent variable models, personalization},
location = {Boston, Massachusetts, USA},
series = {RecSys '16}
}
